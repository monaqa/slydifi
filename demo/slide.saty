% -*- coding: utf-8 -*-
% vim:foldmethod=marker:

@require: code
@require: annot
@require: list
@require: class-slydifi/functions/figbox
@require: class-slydifi/theme/hakodate

open FigBox

in

SlydifiHakodate.document(|
  draft-mode = false;
|)'<

  +make-title(|
    title = {|\SLyDIFi; でらくらくスライド作成|};
    author = {|monaqa|GitHub: \link(`https://github.com/monaqa`);|};
    date = {|2020年1月12日|};
  |);

  +section{|はじめに|}<
    +frame{\SLyDIFi;: \SATySFi; のスライド作成用パッケージ}<
      +listing{
        * \emph{\SATySFi;} (\link(`https://github.com/gfngfn/SATySFi`);)
          ** 静的型付き関数型言語ベースの新たな組版処理システム
          ** 普通の文書作成時にはそこまで関数型言語を意識しなくてよい
          ** パッケージの記述に用いる構文は OCaml 風

        * \emph{\SLyDIFi;} (\link(`https://github.com/monaqa/slydifi`);)
          ** \SATySFi; でスライドを作成することができる
          ** 実は既に先駆者がいる（\link?:({Steamer: Slide Presentation in SATySFi})(`https://github.com/konn/satysfi-steamer`);）
            *** Steamer とは page break 周りの実装を少しばかり変えている
      }

    >
  >

  +section{|\SLyDIFi; の機能|}<
    +frame{フレーム作成}<
      +listing{
        * フレーム：スライド資料の1ページ1ページに値するもの
        * \SLyDIFi; では3種類のフレームを区別する
          ** 見出し：スライド全体の題目，発表者名などを載せるフレーム
          ** セクション見出し：セクションのタイトルを載せる
          ** 本文：通常のフレーム
      }
    >

    +frame{テキストの記述}<
      +p{以下のようなコマンドを用いてテキストを記述できる．}
      +listing{
        * \code(`+p{}`);: 段落
        * \code(`+listing{}`);: 番号のない箇条書き
        * \code(`+enumerate{}`);: 番号付きの箇条書き
      }
      +p{さらに，インラインテキストの中では以下のマークアップが使える．}
      +listing{
        * \code(`\emph{}`);: \emph{強調}
        * \code(`\textbf{}`);: \textbf{太字}
        * \code(`\text-color(){}`);: \text-color(SlydifiColor.html-color 0x42883B){文字色変更}
        * \code(``\link?:({Hyper Link})(`url`)``);: \link?:({ハイパーリンク})(`https://github.com/gfngfn/SATySFi`);
      }
    >

    +frame{図表の貼り付け（`FigBox` モジュール）}<
      +listing{
        * 例： \code(``+fig-center(FigBox.include-image 200pt `path/to/image.jpg`);``);
          ** \code(`FigBox.include-image`);：画像 (PDF/JPEG) を指定幅で読み込む
          ** \code(`+fig-center`);：読み込んだ図を中央揃えで配置
      }

      +fig-on-right(dummy-box 100pt 200pt)<
        +listing{
          * その他にも様々な読み込み用の関数や配置コマンドが用意されている
            ** `dummy-box`：指定されたサイズのダミーボックス
            ** `hmargin`：水平方向に指定された量の余白を付ける
            ** `\fig-inline`：テキスト中\fig-inline?:(0.5)(dummy-box 60pt 30pt |> hmargin 5pt);に画像を出力
            ** `+fig-on-right`：画像を右に，本文を左に配置

        }
      >

    >
  >

  +section{|\SLyDIFi; のテーマのカスタマイズ|}<
  >

>
